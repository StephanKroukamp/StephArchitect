<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="StephArchitect" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="StephArchitect" #>
<#@ parameter name="ProjectName" type="System.String" #>
<#@ parameter name="Entities" type="List<StephArchitect.Entity>" #>
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
<#
    foreach (var entity in Entities)
    {
        #>
using <#= ProjectName #>.Application.<#= entity.Name.Pluralize() #>;
using <#= ProjectName #>.Persistence.<#= entity.Name.Pluralize() #>;
<#
    }
#>

namespace <#= ProjectName #>.Persistence;

public static class DependencyInjection
{
    public static void AddPersistence(this IServiceCollection services, IConfiguration configuration)
    {
        var databaseConnectionString = configuration.GetConnectionString("DefaultConnection");

        services.AddDbContext<<#= ProjectName #>DbContext>(opt =>
        {
            opt.UseSqlServer(databaseConnectionString,
                x => x
                    .MigrationsHistoryTable("__EFMigrationsHistory", "<#= ProjectName.ToLower() #>")
                    .MigrationsAssembly(typeof(<#= ProjectName #>DbContext).Assembly.FullName)
            );
        });
<#
    foreach (var entity in Entities)
    {#>
        services.AddScoped<I<#= entity.Name#>Repository, <#= entity.Name#>Repository>();        
    <#}#>
    }
}
